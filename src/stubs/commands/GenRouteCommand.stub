<?php
namespace Laventure\stubs\commands;


use Laventure\Component\Console\Command\Command;
use Laventure\Component\Console\Input\Contract\InputInterface;
use Laventure\Component\Console\Output\Contract\OutputInterface;
use Laventure\Foundation\Service\Generator\Route\RouteGenerator;


/**
 * Class GenRouteCommand
 *
 * @package App\Console\Commands
 *
 * <Generated By Laventure 02/11/2022 14:20:03>
*/
class GenRouteCommand extends Command
{

    /**
     * @var string
    */
    protected $name = 'gen:route';



    /**
     * @var string
    */
    protected $description = 'describe your command here...';




    /**
     * @var RouteGenerator
    */
    protected $routeGenerator;





    /**
      * @param RouteGenerator $generator
      * @param $name
    */
    public function __construct(RouteGenerator $generator, $name = null)
    {
         parent::__construct($name);
         $this->routeGenerator = $generator;
    }




    /**
     * @param InputInterface $input
     * @param OutputInterface $output
     * @return int
    */
    public function execute(InputInterface $input, OutputInterface $output): int
    {
           // put your logic here
           // dd($this->routeGenerator);
           $webRouteGenerated = $this->routeGenerator->generateResourceWeb("DemoController");

           if ($webRouteGenerated) {
               $output->success(
                   "New route resource added to '{$this->routeGenerator->webRoutePath()}'"
               );
           }


           $apiRouteGenerated = $this->routeGenerator->generateResourceApi("DemoController");

           if ($apiRouteGenerated) {
             $output->success(
                "New route resource added to '{$this->routeGenerator->apiRoutePath()}'!"
             );
           }


           return Command::SUCCESS;
    }
}